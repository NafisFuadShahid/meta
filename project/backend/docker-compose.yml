version: "3.8"
services:
  # Keycloak Database
  keycloak-mysql:
    container_name: keycloak-mysql
    image: mysql:8
    volumes:
      - keycloak_mysql_data:/var/lib/mysql # Changed to named volume
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: password
    networks:
      - meta-network

  # Keycloak Service
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:24.0.1
    command:
      - "start-dev"
      - "--import-realm"
      - "--health-enabled=true"
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: keycloak-mysql
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HTTP_PORT: 8181
    ports:
      - "8181:8181"
    volumes:
      - ./api-gateway/docker/keycloak/realms/:/opt/keycloak/data/import/:ro # Read-only mount
      - keycloak_data:/opt/keycloak/data # Persistent data
    depends_on:
      - keycloak-mysql
    networks:
      - meta-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8181/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Gateway Service
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "9000:9000"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - KEYCLOAK_AUTH_SERVER_URL=http://keycloak:8181 # Updated to use 8181
    depends_on:
      keycloak:
        condition: service_healthy
    networks:
      - meta-network

  # Office Service Database
  mysql_office:
    image: mysql:8.3.0
    container_name: mysql_office
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 123
      MYSQL_DATABASE: office_service
    volumes:
      - ./office-service/mysql:/var/lib/mysql
      - ./office-service/docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - meta-network
    healthcheck:
      test:
        ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p123"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Office Service
  office-service:
    build:
      context: ./office-service
      dockerfile: Dockerfile
    container_name: office-service
    ports:
      - "8080:8080" # This is fine as it's in a separate container
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql_office:3306/office_service
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=123
    depends_on:
      mysql_office:
        condition: service_healthy
    networks:
      - meta-network

  # User Service
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - KEYCLOAK_AUTH_SERVER_URL=http://keycloak:8181 # Updated to use 8181
      - KEYCLOAK_REALM=meta
      - KEYCLOAK_RESOURCE=user-service
      - KEYCLOAK_CREDENTIALS_SECRET=pDAsehtUBhp1miNCQ8fq40sV8fwdhSdJ
      - KEYCLOAK_ADMIN_USERNAME=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://keycloak:8181/realms/meta # Updated to use 8181
    depends_on:
      keycloak:
        condition: service_healthy
    networks:
      - meta-network

volumes:
  keycloak_mysql_data:
    name: keycloak_mysql_data
  keycloak_data:
    name: keycloak_data

networks:
  meta-network:
    driver: bridge
